{"version":3,"sources":["prompts.ts"],"names":["ToolCallingAgentSystemPrompt","PromptTemplate","schema","z","object","role","string","instructions","optional","functions","formatDate","Date","toISOString","defaults","template","ToolCallingAgentTaskPrompt","prompt","context","expectedOutput"],"mappings":";;;;;AAmBaA,MAAAA,4BAAAA,GAA+B,IAAIC,cAAe,CAAA;AAC7DC,EAAAA,MAAAA,EAAQC,EAAEC,MAAO,CAAA;AACfC,IAAAA,IAAAA,EAAMF,EAAEG,MAAM,EAAA;IACdC,YAAcJ,EAAAA,CAAAA,CAAEG,MAAM,EAAA,CAAGE,QAAQ;GACnC,CAAA;EACAC,SAAW,EAAA;AACTC,IAAAA,UAAAA,kBAAY,MAAA,CAAA,WAAA;AACV,MAAO,OAAA,iBAAA,IAAIC,IAAAA,EAAAA,EAAOC,WAAW,EAAA;KADnB,EAAA,YAAA;AAGd,GAAA;EACAC,QAAU,EAAA;IAAER,IAAM,EAAA,wBAAA;IAA0BE,YAAc,EAAA;AAAG,GAAA;EAC7DO,QAAU,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;AAoBZ,CAAA;AAEaC,MAAAA,0BAAAA,GAA6B,IAAId,cAAe,CAAA;AAC3DC,EAAAA,MAAAA,EAAQC,EAAEC,MAAO,CAAA;AACfY,IAAAA,MAAAA,EAAQb,EAAEG,MAAM,EAAA;IAChBW,OAASd,EAAAA,CAAAA,CAAEG,MAAM,EAAA,CAAGE,QAAQ,EAAA;IAC5BU,cAAgBf,EAAAA,CAAAA,CAAEG,MAAM,EAAA,CAAGE,QAAQ;GACrC,CAAA;EACAM,QAAU,EAAA,CAAA;;;;;;;;;;;AAWZ,CAAA","file":"prompts.js","sourcesContent":["/**\n * Copyright 2025 Â© BeeAI a Series of LF Projects, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PromptTemplate } from \"@/template.js\";\nimport { z } from \"zod\";\n\nexport const ToolCallingAgentSystemPrompt = new PromptTemplate({\n  schema: z.object({\n    role: z.string(),\n    instructions: z.string().optional(),\n  }),\n  functions: {\n    formatDate: function () {\n      return new Date().toISOString();\n    },\n  },\n  defaults: { role: \"A helpful AI assistant\", instructions: \"\" },\n  template: `Assume the role of {{role}}.\n{{#instructions}}\n\nYour instructions are:\n{{.}}\n{{/instructions}}\n\nWhen the user sends a message, figure out a solution and provide a final answer to the user by calling the 'final_answer' tool.\nBefore you call the 'final_answer' tool, ensure that you have gathered sufficient evidence to support the final answer.\n\n# Best practices\n- Use markdown syntax to format code snippets, links, JSON, tables, images, and files.\n- If the provided task is unclear, ask the user for clarification.\n- Do not refer to tools or tool outputs by name when responding.\n- Do not call the same tool twice with the similar inputs.\n\n# Date and Time\nThe current date and time is: {{formatDate}}\nYou do not need a tool to get the current Date and Time. Use the information available here.\n`,\n});\n\nexport const ToolCallingAgentTaskPrompt = new PromptTemplate({\n  schema: z.object({\n    prompt: z.string(),\n    context: z.string().optional(),\n    expectedOutput: z.string().optional(),\n  }),\n  template: `{{#context}}This is the context that you are working with:\n{{.}}\n\n{{/context}}\n{{#expectedOutput}}\nThis is the expected criteria for your output:\n{{.}}\n\n{{/expectedOutput}}\nYour task: {{prompt}}\n`,\n});\n"]}