{"version":3,"sources":["agent.ts"],"names":["ReActAgent","BaseAgent","emitter","runner","constructor","input","Emitter","root","child","namespace","creator","duplicate","tools","find","a","i","arr","b","j","name","toUpperCase","ValueError","modelId","llm","toLowerCase","tag","GraniteRunner","DeepThinkRunner","includes","DefaultRunner","register","memory","meta","slice","description","length","extraDescription","map","tool","join","_run","options","run","execution","maxRetriesPerStep","totalMaxRetries","maxIterations","init","finalMessage","state","signal","createIteration","tool_name","tool_input","output","success","add","AssistantMessage","templates","assistant","render","thought","filter","R","isTruthy","toolName","toolInput","call","JSON","stringify","toolOutput","finalAnswer","final_answer","assign","tool_output","key","emit","data","update","value","parsedValue","createdAt","Date","iterations","prompt","UserMessage","result","createSnapshot"],"mappings":"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","file":"agent.cjs","sourcesContent":["/**\n * Copyright 2025 Â© BeeAI a Series of LF Projects, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseAgent } from \"@/agents/base.js\";\nimport { AnyTool } from \"@/tools/base.js\";\nimport { BaseMemory } from \"@/memory/base.js\";\nimport { AssistantMessage, Message, UserMessage } from \"@/backend/message.js\";\nimport { AgentMeta } from \"@/agents/types.js\";\nimport { Emitter } from \"@/emitter/emitter.js\";\nimport {\n  ReActAgentExecutionConfig,\n  ReActAgentTemplates,\n  ReActAgentCallbacks,\n  ReActAgentRunInput,\n  ReActAgentRunOptions,\n  ReActAgentRunOutput,\n} from \"@/agents/react/types.js\";\nimport { GetRunContext } from \"@/context.js\";\nimport { assign } from \"@/internals/helpers/object.js\";\nimport * as R from \"remeda\";\nimport { BaseRunner } from \"@/agents/react/runners/base.js\";\nimport { GraniteRunner } from \"@/agents/react/runners/granite/runner.js\";\nimport { DeepThinkRunner } from \"@/agents/react/runners/deep-think/runner.js\";\nimport { ValueError } from \"@/errors.js\";\nimport { DefaultRunner } from \"@/agents/react/runners/default/runner.js\";\nimport { ChatModel } from \"@/backend/chat.js\";\n\nexport type ReActAgentTemplateFactory<K extends keyof ReActAgentTemplates> = (\n  template: ReActAgentTemplates[K],\n) => ReActAgentTemplates[K];\n\nexport interface ReActAgentInput {\n  llm: ChatModel;\n  tools: AnyTool[];\n  memory: BaseMemory;\n  meta?: Omit<AgentMeta, \"tools\">;\n  templates?: Partial<{\n    [K in keyof ReActAgentTemplates]: ReActAgentTemplates[K] | ReActAgentTemplateFactory<K>;\n  }>;\n  execution?: ReActAgentExecutionConfig;\n  stream?: boolean;\n}\n\nexport class ReActAgent extends BaseAgent<\n  ReActAgentRunInput,\n  ReActAgentRunOutput,\n  ReActAgentRunOptions\n> {\n  public readonly emitter = Emitter.root.child<ReActAgentCallbacks>({\n    namespace: [\"agent\", \"react\"],\n    creator: this,\n  });\n\n  protected runner: new (...args: ConstructorParameters<typeof BaseRunner>) => BaseRunner;\n\n  constructor(protected readonly input: ReActAgentInput) {\n    super();\n\n    const duplicate = input.tools.find((a, i, arr) =>\n      arr.find((b, j) => i !== j && a.name.toUpperCase() === b.name.toUpperCase()),\n    );\n    if (duplicate) {\n      throw new ValueError(\n        `Agent's tools must all have different names. Conflicting tool: ${duplicate.name}.`,\n      );\n    }\n\n    const modelId = this.input.llm.modelId.toLowerCase();\n    this.runner =\n      [\n        { tag: \"granite\", runner: GraniteRunner },\n        { tag: \"deepseek-r1\", runner: DeepThinkRunner },\n      ].find(({ tag }) => modelId.includes(tag))?.runner ?? DefaultRunner;\n  }\n\n  static {\n    this.register();\n  }\n\n  set memory(memory: BaseMemory) {\n    this.input.memory = memory;\n  }\n\n  get memory() {\n    return this.input.memory;\n  }\n\n  get meta(): AgentMeta {\n    const tools = this.input.tools.slice();\n\n    if (this.input.meta) {\n      return { ...this.input.meta, tools };\n    }\n\n    return {\n      name: \"ReAct\",\n      tools,\n      description:\n        \"The Bee framework demonstrates its ability to auto-correct and adapt in real-time, improving the overall reliability and resilience of the system.\",\n      ...(tools.length > 0 && {\n        extraDescription: [\n          `Tools that I can use to accomplish given task.`,\n          ...tools.map((tool) => `Tool '${tool.name}': ${tool.description}.`),\n        ].join(\"\\n\"),\n      }),\n    };\n  }\n\n  protected async _run(\n    input: ReActAgentRunInput,\n    options: ReActAgentRunOptions = {},\n    run: GetRunContext<typeof this>,\n  ): Promise<ReActAgentRunOutput> {\n    const runner = new this.runner(\n      this.input,\n      {\n        ...options,\n        execution: this.input.execution ??\n          options?.execution ?? {\n            maxRetriesPerStep: 3,\n            totalMaxRetries: 20,\n            maxIterations: 10,\n          },\n      },\n      run,\n    );\n    await runner.init(input);\n\n    let finalMessage: Message | undefined;\n    while (!finalMessage) {\n      const { state, meta, emitter, signal } = await runner.createIteration();\n\n      if (state.tool_name && state.tool_input) {\n        const { output, success } = await runner.tool({\n          state,\n          emitter,\n          meta,\n          signal,\n        });\n        await runner.memory.add(\n          new AssistantMessage(\n            runner.templates.assistant.render({\n              thought: [state.thought].filter(R.isTruthy),\n              toolName: [state.tool_name].filter(R.isTruthy),\n              toolInput: [state.tool_input].filter(R.isTruthy).map((call) => JSON.stringify(call)),\n              toolOutput: [output],\n              finalAnswer: [state.final_answer].filter(R.isTruthy),\n            }),\n            { success },\n          ),\n        );\n        assign(state, { tool_output: output });\n\n        for (const key of [\"partialUpdate\", \"update\"] as const) {\n          await emitter.emit(key, {\n            data: state,\n            update: { key: \"tool_output\", value: output, parsedValue: output },\n            meta: { success, ...meta },\n            memory: runner.memory,\n          });\n        }\n      }\n      if (state.final_answer) {\n        finalMessage = new AssistantMessage(state.final_answer, {\n          createdAt: new Date(),\n        });\n        await runner.memory.add(finalMessage);\n        await emitter.emit(\"success\", {\n          data: finalMessage,\n          iterations: runner.iterations,\n          memory: runner.memory,\n          meta,\n        });\n      }\n    }\n\n    if (input.prompt !== null) {\n      await this.input.memory.add(\n        new UserMessage(input.prompt, {\n          createdAt: run.createdAt,\n        }),\n      );\n    }\n\n    await this.input.memory.add(finalMessage);\n    return { result: finalMessage, iterations: runner.iterations, memory: runner.memory };\n  }\n\n  createSnapshot() {\n    return {\n      ...super.createSnapshot(),\n      input: this.input,\n      emitter: this.emitter,\n      runner: this.runner,\n    };\n  }\n}\n"]}