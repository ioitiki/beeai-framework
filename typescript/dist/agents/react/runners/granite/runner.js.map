{"version":3,"sources":["runner.ts"],"names":["GraniteRunner","DefaultRunner","useNativeToolCalling","defaultTemplates","system","GraniteReActAgentSystemPrompt","assistant","GraniteReActAgentAssistantPrompt","user","GraniteReActAgentUserPrompt","schemaError","GraniteReActAgentSchemaErrorPrompt","toolNotFoundError","GraniteReActAgentToolNotFoundPrompt","toolError","GraniteReActAgentToolErrorPrompt","toolInputError","GraniteReActAgentToolInputErrorPrompt","userEmpty","ReActAgentUserEmptyPrompt","toolNoResultError","ReActAgentToolNoResultsPrompt","register","constructor","input","options","run","emitter","on","update","meta","memory","data","key","add","ToolMessage","type","result","value","toolName","tool_name","isError","success","toolCallId","isBlocking","createParser","tools","parser","fork","nodes","thought","prefix","tool_input","isEnd","next","final_answer","enumerable"],"mappings":";;;;;;;;AAcC,SAAA,YAAA,CAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA;;;;;;AAAA,MAAA,CAAA,YAAA,EAAA,cAAA,CAAA;;;;;AAuBM,MAAMA,sBAAsBC,aAAAA,CAAAA;EArCnC;;;EAsCYC,oBAAuB,GAAA,IAAA;AAEjC,EAAA,IACWC,gBAAmB,GAAA;AAC5B,IAAO,OAAA;MACLC,MAAQC,EAAAA,6BAAAA;MACRC,SAAWC,EAAAA,gCAAAA;MACXC,IAAMC,EAAAA,2BAAAA;MACNC,WAAaC,EAAAA,kCAAAA;MACbC,iBAAmBC,EAAAA,mCAAAA;MACnBC,SAAWC,EAAAA,gCAAAA;MACXC,cAAgBC,EAAAA,qCAAAA;;MAEhBC,SAAWC,EAAAA,yBAAAA;MACXC,iBAAmBC,EAAAA;AACrB,KAAA;AACF;EAEA;AACE,IAAA,IAAA,CAAKC,QAAQ,EAAA;AACf;EAEAC,WACEC,CAAAA,KAAAA,EACAC,SACAC,GACA,EAAA;AACA,IAAMF,KAAAA,CAAAA,KAAAA,EAAOC,SAASC,GAAAA,CAAAA;AAEtBA,IAAIC,GAAAA,CAAAA,OAAAA,CAAQC,GACV,QACA,EAAA,OAAO,EAAEC,MAAQC,EAAAA,IAAAA,EAAMC,MAAQC,EAAAA,IAAAA,EAAM,KAAA;AACnC,MAAIH,IAAAA,MAAAA,CAAOI,QAAQ,aAAe,EAAA;AAChC,QAAMF,MAAAA,MAAAA,CAAOG,GACX,CAAA,IAAIC,WACF,CAAA;UACEC,IAAM,EAAA,aAAA;AACNC,UAAAA,MAAAA,EAAQR,MAAOS,CAAAA,KAAAA;AACfC,UAAAA,QAAAA,EAAUP,IAAKQ,CAAAA,SAAAA;AACfC,UAAAA,OAAAA,EAAS,CAACX,IAAKY,CAAAA,OAAAA;UACfC,UAAY,EAAA;SAEd,EAAA;AAAED,UAAAA,OAAAA,EAASZ,IAAKY,CAAAA;AAAQ,SAAA,CAAA,CAAA;AAG9B;KAEF,EAAA;MACEE,UAAY,EAAA;KACd,CAAA;AAEJ;AAEUC,EAAAA,YAAAA,CAAaC,KAAkB,EAAA;AACvC,IAAA,MAAM,EAAEC,MAAAA,EAAW,GAAA,KAAA,CAAMF,aAAaC,KAAAA,CAAAA;AAEtC,IAAO,OAAA;AACLC,MAAAA,MAAAA,EAAQA,MAAOC,CAAAA,IAAAA,CAA4B,CAACC,KAAAA,EAAOxB,OAAa,MAAA;AAC9DA,QAAAA,OAAAA;QACAwB,KAAO,EAAA;UACL,GAAGA,KAAAA;UACHC,OAAS,EAAA;AAAE,YAAA,GAAGD,KAAMC,CAAAA,OAAAA;YAASC,MAAQ,EAAA;AAAW,WAAA;UAChDX,SAAW,EAAA;AAAE,YAAA,GAAGS,KAAMT,CAAAA,SAAAA;YAAWW,MAAQ,EAAA;AAAa,WAAA;UACtDC,UAAY,EAAA;AAAE,YAAA,GAAGH,KAAMG,CAAAA,UAAAA;YAAYD,MAAQ,EAAA,aAAA;YAAeE,KAAO,EAAA,IAAA;AAAMC,YAAAA,IAAAA,EAAM;AAAG,WAAA;UAChFC,YAAc,EAAA;AAAE,YAAA,GAAGN,KAAMM,CAAAA,YAAAA;YAAcJ,MAAQ,EAAA;AAAgB;AACjE;OACF,CAAA;AACF,KAAA;AACF;AACF;;;IAnEWK,UAAY,EAAA","file":"runner.js","sourcesContent":["/**\n * Copyright 2025 Â© BeeAI a Series of LF Projects, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ToolMessage } from \"@/backend/message.js\";\nimport type { AnyTool } from \"@/tools/base.js\";\nimport { DefaultRunner } from \"@/agents/react/runners/default/runner.js\";\nimport type { ReActAgentParserInput, ReActAgentRunOptions } from \"@/agents/react/types.js\";\nimport { ReActAgent, ReActAgentInput } from \"@/agents/react/agent.js\";\nimport type { GetRunContext } from \"@/context.js\";\nimport {\n  GraniteReActAgentAssistantPrompt,\n  GraniteReActAgentSchemaErrorPrompt,\n  GraniteReActAgentSystemPrompt,\n  GraniteReActAgentToolErrorPrompt,\n  GraniteReActAgentToolInputErrorPrompt,\n  GraniteReActAgentToolNotFoundPrompt,\n  GraniteReActAgentUserPrompt,\n} from \"@/agents/react/runners/granite/prompts.js\";\nimport {\n  ReActAgentToolNoResultsPrompt,\n  ReActAgentUserEmptyPrompt,\n} from \"@/agents/react/prompts.js\";\nimport { Cache } from \"@/cache/decoratorCache.js\";\n\nexport class GraniteRunner extends DefaultRunner {\n  protected useNativeToolCalling = true;\n\n  @Cache({ enumerable: false })\n  public get defaultTemplates() {\n    return {\n      system: GraniteReActAgentSystemPrompt,\n      assistant: GraniteReActAgentAssistantPrompt,\n      user: GraniteReActAgentUserPrompt,\n      schemaError: GraniteReActAgentSchemaErrorPrompt,\n      toolNotFoundError: GraniteReActAgentToolNotFoundPrompt,\n      toolError: GraniteReActAgentToolErrorPrompt,\n      toolInputError: GraniteReActAgentToolInputErrorPrompt,\n      // Note: These are from ReAct\n      userEmpty: ReActAgentUserEmptyPrompt,\n      toolNoResultError: ReActAgentToolNoResultsPrompt,\n    };\n  }\n\n  static {\n    this.register();\n  }\n\n  constructor(\n    input: ReActAgentInput,\n    options: ReActAgentRunOptions,\n    run: GetRunContext<ReActAgent>,\n  ) {\n    super(input, options, run);\n\n    run.emitter.on(\n      \"update\",\n      async ({ update, meta, memory, data }) => {\n        if (update.key === \"tool_output\") {\n          await memory.add(\n            new ToolMessage(\n              {\n                type: \"tool-result\",\n                result: update.value!,\n                toolName: data.tool_name!,\n                isError: !meta.success,\n                toolCallId: \"DUMMY_ID\",\n              },\n              { success: meta.success },\n            ),\n          );\n        }\n      },\n      {\n        isBlocking: true,\n      },\n    );\n  }\n\n  protected createParser(tools: AnyTool[]) {\n    const { parser } = super.createParser(tools);\n\n    return {\n      parser: parser.fork<ReActAgentParserInput>((nodes, options) => ({\n        options,\n        nodes: {\n          ...nodes,\n          thought: { ...nodes.thought, prefix: \"Thought:\" },\n          tool_name: { ...nodes.tool_name, prefix: \"Tool Name:\" },\n          tool_input: { ...nodes.tool_input, prefix: \"Tool Input:\", isEnd: true, next: [] },\n          final_answer: { ...nodes.final_answer, prefix: \"Final Answer:\" },\n        },\n      })),\n    };\n  }\n}\n"]}