{"version":3,"sources":["client.ts"],"names":["BackendClient","Serializable","instance","settings","constructor","create","createSnapshot","shallowCopy","loadSnapshot","snapshot","Object","assign","ensure"],"mappings":";;;;;;;AAmBO,MAAeA,sBAA4BC,6BAAAA,CAAAA;EAnBlD;;;AAoBkBC,EAAAA,QAAAA;AACGC,EAAAA,QAAAA;AAEnBC,EAAAA,WAAAA,CAAYD,QAAa,EAAA;AACvB,IAAK,KAAA,EAAA;AACL,IAAKA,IAAAA,CAAAA,QAAAA,GAAWA,YAAa,EAAC;AAC9B,IAAKD,IAAAA,CAAAA,QAAAA,GAAW,KAAKG,MAAM,EAAA;AAC7B;EAIAC,cAAiB,GAAA;AACf,IAAO,OAAA;MACLH,QAAUI,EAAAA,qBAAAA,CAAY,KAAKJ,QAAQ;AACrC,KAAA;AACF;AAEAK,EAAAA,YAAAA,CAAaC,QAAkD,EAAA;AAC7DC,IAAOC,MAAAA,CAAAA,MAAAA,CAAO,MAAMF,QAAAA,CAAAA;AACpBC,IAAAA,MAAAA,CAAOC,OAAO,IAAM,EAAA;AAAET,MAAAA,QAAAA,EAAU,KAAKG,MAAM;KAAG,CAAA;AAChD;AAEA,EAAA,OAAOO,OAELT,QACG,EAAA;AACH,IAAIA,IAAAA,QAAAA,IAAYA,oBAAoB,IAAM,EAAA;AACxC,MAAOA,OAAAA,QAAAA;AACT;AACA,IAAO,OAAA,IAAI,KAAKA,QAAAA,CAAAA;AAClB;AACF","file":"client.cjs","sourcesContent":["/**\n * Copyright 2025 Â© BeeAI a Series of LF Projects, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Serializable } from \"@/internals/serializable.js\";\nimport { shallowCopy } from \"@/serializer/utils.js\";\n\nexport abstract class BackendClient<P, T> extends Serializable {\n  public readonly instance: T;\n  protected readonly settings: P;\n\n  constructor(settings: P) {\n    super();\n    this.settings = settings ?? ({} as P);\n    this.instance = this.create();\n  }\n\n  protected abstract create(): T;\n\n  createSnapshot() {\n    return {\n      settings: shallowCopy(this.settings),\n    };\n  }\n\n  loadSnapshot(snapshot: ReturnType<typeof this.createSnapshot>) {\n    Object.assign(this, snapshot);\n    Object.assign(this, { instance: this.create() });\n  }\n\n  static ensure<P2, T2, R extends BackendClient<P2, T2>>(\n    this: new (settings: P2) => R,\n    settings?: P2 | R,\n  ): R {\n    if (settings && settings instanceof this) {\n      return settings;\n    }\n    return new this(settings as P2);\n  }\n}\n"]}