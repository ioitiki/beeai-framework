{"version":3,"sources":["client.ts"],"names":["WatsonxClient","BackendClient","constructor","settings","region","getEnv","baseUrl","projectId","spaceId","undefined","version","create","WatsonXAI","newInstance","serviceUrl","authenticator","IamAuthenticator","apikey","apiKey","url"],"mappings":";;;;;;;;;AA6BO,MAAMA,sBAAsBC,wBAAAA,CAAAA;EA7BnC;;;AA8BEC,EAAAA,WAAAA,CAAYC,QAAiC,EAAA;AAC3C,IAAA,MAAMC,MAASD,GAAAA,QAAAA,EAAUC,MAAUC,IAAAA,cAAAA,CAAO,gBAAA,CAAA;AAC1C,IAAA,MAAMC,UACJH,QAAUG,EAAAA,OAAAA,IAAWD,eAAO,kBAAA,CAAA,IAAuB,WAAWD,MAAAA,CAAAA,iBAAAA,CAAAA;AAEhE,IAAA,MAAMG,SAAYJ,GAAAA,QAAAA,EAAUI,SAAaF,IAAAA,cAAAA,CAAO,oBAAA,CAAA;AAChD,IAAA,MAAMG,UAAUD,SAAYE,GAAAA,MAAAA,GAAYN,QAAUK,EAAAA,OAAAA,IAAWH,eAAO,kBAAA,CAAA;AACpE,IAAA,MAAMK,OAAUP,GAAAA,QAAAA,EAAUO,OAAWL,IAAAA,cAAAA,CAAO,iBAAA,CAAsB,IAAA,YAAA;AAElE,IAAM,KAAA,CAAA;MACJ,GAAGF,QAAAA;AACHG,MAAAA,OAAAA;AACAC,MAAAA,SAAAA;AACAC,MAAAA,OAAAA;AACAE,MAAAA;KACF,CAAA;AACF;AACA,EAAA,IAAIF,OAAU,GAAA;AACZ,IAAA,OAAO,KAAKL,QAASK,CAAAA,OAAAA;AACvB;AAEA,EAAA,IAAID,SAAY,GAAA;AACd,IAAA,OAAO,KAAKJ,QAASI,CAAAA,SAAAA;AACvB;EAEUI,MAAS,GAAA;AACjB,IAAA,OAAOC,oBAAUC,WAAY,CAAA;AAC3BH,MAAAA,OAAAA,EAAS,KAAKP,QAASO,CAAAA,OAAAA;AACvBI,MAAAA,UAAAA,EAAY,KAAKX,QAASG,CAAAA,OAAAA;AAC1BS,MAAAA,aAAAA,EACE,IAAKZ,CAAAA,QAAAA,EAAUY,aACf,IAAA,IAAIC,gCAAiB,CAAA;AACnBC,QAAAA,MAAAA,EAAQ,IAAKd,CAAAA,QAAAA,EAAUe,MAAUb,IAAAA,cAAAA,CAAO,mBAAmB,EAAA,CAAA;QAC3Dc,GAAK,EAAA;OACP;KACJ,CAAA;AACF;AACF","file":"client.cjs","sourcesContent":["/**\n * Copyright 2025 Â© BeeAI a Series of LF Projects, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WatsonXAI } from \"@ibm-cloud/watsonx-ai\";\nimport { getEnv } from \"@/internals/env.js\";\nimport { IamAuthenticator, UserOptions } from \"ibm-cloud-sdk-core\";\nimport { BackendClient } from \"@/backend/client.js\";\n\nexport interface WatsonxClientSettings extends Pick<UserOptions, \"authenticator\" | \"version\"> {\n  spaceId?: string;\n  baseUrl?: string;\n  region?: string;\n  projectId?: string;\n  apiKey?: string;\n}\n\nexport class WatsonxClient extends BackendClient<WatsonxClientSettings, WatsonXAI> {\n  constructor(settings: WatsonxClientSettings) {\n    const region = settings?.region || getEnv(\"WATSONX_REGION\");\n    const baseUrl =\n      settings?.baseUrl || getEnv(\"WATSONX_BASE_URL\") || `https://${region}.ml.cloud.ibm.com`;\n\n    const projectId = settings?.projectId || getEnv(\"WATSONX_PROJECT_ID\");\n    const spaceId = projectId ? undefined : settings?.spaceId || getEnv(\"WATSONX_SPACE_ID\");\n    const version = settings?.version || getEnv(\"WATSONX_VERSION\") || \"2024-05-31\";\n\n    super({\n      ...settings,\n      baseUrl,\n      projectId,\n      spaceId,\n      version,\n    });\n  }\n  get spaceId() {\n    return this.settings.spaceId;\n  }\n\n  get projectId() {\n    return this.settings.projectId;\n  }\n\n  protected create() {\n    return WatsonXAI.newInstance({\n      version: this.settings.version,\n      serviceUrl: this.settings.baseUrl,\n      authenticator:\n        this.settings?.authenticator ||\n        new IamAuthenticator({\n          apikey: this.settings?.apiKey || getEnv(\"WATSONX_API_KEY\", \"\"),\n          url: \"https://iam.cloud.ibm.com\",\n        }),\n    });\n  }\n}\n"]}