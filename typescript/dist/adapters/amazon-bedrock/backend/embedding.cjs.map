{"version":3,"sources":["embedding.ts"],"names":["BedrockEmbeddingModel","VercelEmbeddingModel","constructor","modelId","getEnv","settings","client","model","AmazonBedrockClient","ensure","instance","embedding"],"mappings":";;;;;;;;AA4BO,MAAMA,8BAA8BC,kCAAAA,CAAAA;EA5B3C;;;EA6BEC,WACEC,CAAAA,OAAAA,GAAmCC,eAAO,qBAAuB,EAAA,4BAAA,GACjEC,QAAqC,GAAA,IACrCC,MACA,EAAA;AACA,IAAMC,MAAAA,KAAAA,GAAQC,+BAAoBC,MAAOH,CAAAA,MAAAA,EAAQI,QAASC,CAAAA,SAAAA,CAAUR,SAASE,QAAAA,CAAAA;AAC7E,IAAA,KAAA,CAAME,KAAAA,CAAAA;AACR;AACF","file":"embedding.cjs","sourcesContent":["/**\n * Copyright 2025 Â© BeeAI a Series of LF Projects, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VercelEmbeddingModel } from \"@/adapters/vercel/backend/embedding.js\";\nimport { AmazonBedrockProvider } from \"@ai-sdk/amazon-bedrock\";\nimport { getEnv } from \"@/internals/env.js\";\nimport {\n  AmazonBedrockClient,\n  AmazonBedrockClientSettings,\n} from \"@/adapters/amazon-bedrock/backend/client.js\";\n\ntype Params = Parameters<AmazonBedrockProvider[\"embedding\"]>;\nexport type BedrockEmbeddingModelId = NonNullable<Params[0]>;\nexport type BedrockEmbeddingSettings = NonNullable<Params[1]>;\n\nexport class BedrockEmbeddingModel extends VercelEmbeddingModel {\n  constructor(\n    modelId: BedrockEmbeddingModelId = getEnv(\"AWS_EMBEDDING_MODEL\", \"amazon.titan-embed-text-v1\"),\n    settings: BedrockEmbeddingSettings = {},\n    client?: AmazonBedrockClient | AmazonBedrockClientSettings,\n  ) {\n    const model = AmazonBedrockClient.ensure(client).instance.embedding(modelId, settings);\n    super(model);\n  }\n}\n"]}