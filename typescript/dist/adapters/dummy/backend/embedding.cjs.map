{"version":3,"sources":["embedding.ts"],"names":["DummyEmbeddingModel","EmbeddingModel","emitter","constructor","modelId","Emitter","root","child","namespace","creator","providerId","_create","_input","_run","NotImplementedError","createSnapshot","loadSnapshot","snapshot","Object","assign"],"mappings":";;;;;;;;AA0BO,MAAMA,4BAA4BC,4BAAAA,CAAAA;EA1BzC;;;;AA2BkBC,EAAAA,OAAAA;AAKhBC,EAAAA,WAAAA,CAA4BC,UAAU,OAAS,EAAA;AAC7C,IAAK,KAAA,EAAA,EAAA,KADqBA,OAAAA,GAAAA,OAAAA,EAAAA,KALZF,OAAUG,GAAAA,mBAAAA,CAAQC,KAAKC,KAA4B,CAAA;MACjEC,SAAW,EAAA;AAAC,QAAA,SAAA;AAAW,QAAA,OAAA;AAAS,QAAA;;MAChCC,OAAS,EAAA;KACX,CAAA;AAIA;AAEA,EAAA,IAAIC,UAAqB,GAAA;AACvB,IAAO,OAAA,OAAA;AACT;AAEUC,EAAAA,OAAAA,CACRC,QACAC,IAC+B,EAAA;AAC/B,IAAA,MAAM,IAAIC,8BAAAA,EAAAA;AACZ;EAEAC,cAAiB,GAAA;AACf,IAAO,OAAA;AAAE,MAAA,GAAG,MAAMA,cAAAA,EAAAA;AAAkBX,MAAAA,OAAAA,EAAS,IAAKA,CAAAA;AAAQ,KAAA;AAC5D;AAEAY,EAAAA,YAAAA,CAAaC,QAAwD,EAAA;AACnEC,IAAOC,MAAAA,CAAAA,MAAAA,CAAO,MAAMF,QAAAA,CAAAA;AACtB;AACF","file":"embedding.cjs","sourcesContent":["/**\n * Copyright 2025 Â© BeeAI a Series of LF Projects, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GetRunContext } from \"@/context.js\";\nimport { Emitter } from \"@/emitter/emitter.js\";\nimport { NotImplementedError } from \"@/errors.js\";\nimport {\n  EmbeddingModel,\n  EmbeddingModelEvents,\n  EmbeddingModelInput,\n  EmbeddingModelOutput,\n} from \"@/backend/embedding.js\";\n\nexport class DummyEmbeddingModel extends EmbeddingModel {\n  public readonly emitter = Emitter.root.child<EmbeddingModelEvents>({\n    namespace: [\"backend\", \"dummy\", \"embedding\"],\n    creator: this,\n  });\n\n  constructor(public readonly modelId = \"dummy\") {\n    super();\n  }\n\n  get providerId(): string {\n    return \"dummy\";\n  }\n\n  protected _create(\n    _input: EmbeddingModelInput,\n    _run: GetRunContext<this>,\n  ): Promise<EmbeddingModelOutput> {\n    throw new NotImplementedError();\n  }\n\n  createSnapshot() {\n    return { ...super.createSnapshot(), modelId: this.modelId };\n  }\n\n  loadSnapshot(snapshot: ReturnType<typeof this.createSnapshot>): void {\n    Object.assign(this, snapshot);\n  }\n}\n"]}