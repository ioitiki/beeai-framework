{"version":3,"sources":["embedding.ts"],"names":["XAIEmbeddingModel","VercelEmbeddingModel","constructor","modelId","getEnv","_settings","client","ValueError","model","XaiClient","ensure","instance","textEmbeddingModel"],"mappings":";;;;;;;;;AA0BO,MAAMA,0BAA0BC,kCAAAA,CAAAA;EA1BvC;;;EA2BEC,WACEC,CAAAA,OAAAA,GAA+BC,eAAO,qBAAuB,EAAA,EAAA,GAC7DC,SAAuC,GAAA,IACvCC,MACA,EAAA;AACA,IAAA,IAAI,CAACH,OAAS,EAAA;AACZ,MAAM,MAAA,IAAII,sBAAW,kBAAA,CAAA;AACvB;AACA,IAAA,MAAMC,QAAQC,oBAAUC,CAAAA,MAAAA,CAAOJ,MAAAA,CAAQK,CAAAA,QAAAA,CAASC,mBAAmBT,OAAAA,CAAAA;AACnE,IAAA,KAAA,CAAMK,KAAAA,CAAAA;AACR;AACF","file":"embedding.cjs","sourcesContent":["/**\n * Copyright 2025 Â© BeeAI a Series of LF Projects, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VercelEmbeddingModel } from \"@/adapters/vercel/backend/embedding.js\";\nimport { getEnv } from \"@/internals/env.js\";\nimport { XaiClient, type XaiClientSettings } from \"@/adapters/xai/backend/client.js\";\nimport { ValueError } from \"@/errors.js\";\nimport type { XaiProvider } from \"@ai-sdk/xai\";\n\ntype XaiParameters = Parameters<XaiProvider[\"textEmbeddingModel\"]>;\nexport type XAIEmbeddingModelId = NonNullable<XaiParameters[0]>;\nexport type XAIEmbeddingModelSettings = Record<string, unknown>;\n\nexport class XAIEmbeddingModel extends VercelEmbeddingModel {\n  constructor(\n    modelId: XAIEmbeddingModelId = getEnv(\"XAI_EMBEDDING_MODEL\", \"\"),\n    _settings: XAIEmbeddingModelSettings = {},\n    client?: XaiClientSettings | XaiClient,\n  ) {\n    if (!modelId) {\n      throw new ValueError(\"Missing modelId!\");\n    }\n    const model = XaiClient.ensure(client).instance.textEmbeddingModel(modelId);\n    super(model);\n  }\n}\n"]}