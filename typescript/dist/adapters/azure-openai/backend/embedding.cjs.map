{"version":3,"sources":["embedding.ts"],"names":["AzureOpenAIEmbeddingModel","VercelEmbeddingModel","constructor","modelId","getEnv","settings","client","model","AzureOpenAIClient","ensure","instance","textEmbeddingModel"],"mappings":";;;;;;;;AA4BO,MAAMA,kCAAkCC,kCAAAA,CAAAA;EA5B/C;;;EA6BEC,WACEC,CAAAA,OAAAA,GAAuCC,eACrC,8BACA,EAAA,wBAAA,GAEFC,QAA8C,GAAA,IAC9CC,MACA,EAAA;AACA,IAAMC,MAAAA,KAAAA,GAAQC,6BAAkBC,MAAOH,CAAAA,MAAAA,EAAQI,QAASC,CAAAA,kBAAAA,CAAmBR,SAASE,QAAAA,CAAAA;AACpF,IAAA,KAAA,CAAME,KAAAA,CAAAA;AACR;AACF","file":"embedding.cjs","sourcesContent":["/**\n * Copyright 2025 Â© BeeAI a Series of LF Projects, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VercelEmbeddingModel } from \"@/adapters/vercel/backend/embedding.js\";\nimport {\n  AzureOpenAIClient,\n  AzureOpenAIClientSettings,\n} from \"@/adapters/azure-openai/backend/client.js\";\nimport { getEnv } from \"@/internals/env.js\";\nimport { AzureOpenAIProvider as VercelAzureOpenAIProviderSettings } from \"@ai-sdk/azure\";\n\ntype AzureOpenAIParameters = Parameters<VercelAzureOpenAIProviderSettings[\"textEmbeddingModel\"]>;\nexport type AzureOpenAIEmbeddingModelId = NonNullable<AzureOpenAIParameters[0]>;\nexport type AzureOpenAIEmbeddingModelSettings = Record<string, any>;\n\nexport class AzureOpenAIEmbeddingModel extends VercelEmbeddingModel {\n  constructor(\n    modelId: AzureOpenAIEmbeddingModelId = getEnv(\n      \"AZURE_OPENAI_EMBEDDING_MODEL\",\n      \"text-embedding-3-small\",\n    ),\n    settings: AzureOpenAIEmbeddingModelSettings = {},\n    client?: AzureOpenAIClient | AzureOpenAIClientSettings,\n  ) {\n    const model = AzureOpenAIClient.ensure(client).instance.textEmbeddingModel(modelId, settings);\n    super(model);\n  }\n}\n"]}