{"version":3,"sources":["chat.ts"],"names":["AzureOpenAIChatModel","VercelChatModel","constructor","modelId","getEnv","settings","client","model","AzureOpenAIClient","ensure","instance","chat"],"mappings":";;;;;;;;AA4BO,MAAMA,6BAA6BC,wBAAAA,CAAAA;EA5B1C;;;EA6BEC,WACEC,CAAAA,OAAAA,GAAkCC,eAAO,yBAA2B,EAAA,QAAA,GACpEC,QAAyC,GAAA,IACzCC,MACA,EAAA;AACA,IAAMC,MAAAA,KAAAA,GAAQC,6BAAkBC,MAAOH,CAAAA,MAAAA,EAAQI,QAASC,CAAAA,IAAAA,CAAKR,SAASE,QAAAA,CAAAA;AACtE,IAAA,KAAA,CAAME,KAAAA,CAAAA;AACR;AACF","file":"chat.cjs","sourcesContent":["/**\n * Copyright 2025 Â© BeeAI a Series of LF Projects, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VercelChatModel } from \"@/adapters/vercel/backend/chat.js\";\nimport type {\n  AzureOpenAIProvider as VercelAzureOpenAIProvider,\n  AzureOpenAIProviderSettings as VercelAzureOpenAIProviderSettings,\n} from \"@ai-sdk/azure\";\nimport { AzureOpenAIClient } from \"@/adapters/azure-openai/backend/client.js\";\nimport { getEnv } from \"@/internals/env.js\";\n\ntype AzureOpenAIParameters = Parameters<VercelAzureOpenAIProvider[\"languageModel\"]>;\nexport type AzureOpenAIChatModelId = NonNullable<AzureOpenAIParameters[0]>;\nexport type AzureOpenAIChatModelSettings = NonNullable<AzureOpenAIParameters[1]>;\n\nexport class AzureOpenAIChatModel extends VercelChatModel {\n  constructor(\n    modelId: AzureOpenAIChatModelId = getEnv(\"AZURE_OPENAI_CHAT_MODEL\", \"gpt-4o\"),\n    settings: AzureOpenAIChatModelSettings = {},\n    client?: VercelAzureOpenAIProviderSettings | AzureOpenAIClient,\n  ) {\n    const model = AzureOpenAIClient.ensure(client).instance.chat(modelId, settings);\n    super(model);\n  }\n}\n"]}